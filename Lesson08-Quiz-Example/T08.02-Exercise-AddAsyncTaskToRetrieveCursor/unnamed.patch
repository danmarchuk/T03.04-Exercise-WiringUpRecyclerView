Index: Lesson08-Quiz-Example/T08.01-Exercise-AddTheContentProviderPermission/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson08-Quiz-Example/T08.01-Exercise-AddTheContentProviderPermission/app/src/main/AndroidManifest.xml	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson08-Quiz-Example/T08.01-Exercise-AddTheContentProviderPermission/app/src/main/AndroidManifest.xml	(date 1596143542998)
@@ -3,6 +3,7 @@
     package="com.udacity.example.quizexample">
 
     <!-- TODO (1) Add the correct permission to access the DroidTermsExample content provider -->
+    <uses-permission android:name="com.example.udacity.droidtermsexample.TERMS_READ"/>
     
     <application
         android:allowBackup="true"
@@ -18,5 +19,4 @@
             </intent-filter>
         </activity>
     </application>
-
 </manifest>
Index: Lesson08-Quiz-Example/T08.02-Exercise-AddAsyncTaskToRetrieveCursor/app/src/main/java/com/udacity/example/quizexample/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson08-Quiz-Example/T08.02-Exercise-AddAsyncTaskToRetrieveCursor/app/src/main/java/com/udacity/example/quizexample/MainActivity.java	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson08-Quiz-Example/T08.02-Exercise-AddAsyncTaskToRetrieveCursor/app/src/main/java/com/udacity/example/quizexample/MainActivity.java	(date 1597408115639)
@@ -16,11 +16,16 @@
 
 package com.udacity.example.quizexample;
 
+import android.content.ContentResolver;
+import android.database.Cursor;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 import android.widget.Button;
 
+import com.udacity.example.droidtermsprovider.DroidTermsExampleContract;
+
 /**
  * Gets the data from the ContentProvider and shows a series of flash cards.
  */
@@ -29,6 +34,7 @@
 
     // The current state of the app
     private int mCurrentState;
+    private Cursor mData;
 
     // TODO (3) Create an instance variable storing a Cursor called mData
     private Button mButton;
@@ -51,6 +57,7 @@
         mButton = (Button) findViewById(R.id.button_next);
 
         // TODO (5) Create and execute your AsyncTask here
+        new AsyncTaskClass().execute();
     }
 
     /**
@@ -91,6 +98,20 @@
     }
 
     // TODO (1) Create AsyncTask with the following generic types <Void, Void, Cursor>
+    private class AsyncTaskClass extends AsyncTask<Void, Void, Cursor> {
+        @Override
+        protected Cursor doInBackground(Void... voids) {
+            ContentResolver resolver = getContentResolver();
+            Cursor cursor = resolver.query(DroidTermsExampleContract.CONTENT_URI, null,null,null,null);
+            return cursor;
+        }
+
+        @Override
+        protected void onPostExecute(Cursor cursor) {
+            mData = cursor;
+        }
+    }
+
     // TODO (2) In the doInBackground method, write the code to access the DroidTermsExample
     // provider and return the Cursor object
     // TODO (4) In the onPostExecute method, store the Cursor object in mData
Index: Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java	(date 1594315945552)
@@ -29,7 +29,11 @@
 
 
 public class SettingsFragment extends PreferenceFragmentCompat implements
-        OnSharedPreferenceChangeListener {
+        OnSharedPreferenceChangeListener,  Preference.OnPreferenceChangeListener{
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        return false;
+    }
 
     @Override
     public void onCreatePreferences(Bundle bundle, String s) {
@@ -51,6 +55,9 @@
                 setPreferenceSummary(p, value);
             }
         }
+
+        Preference preference = findPreference(getString(R.string.pref_size_key));
+        preference.setOnPreferenceChangeListener(this);
     }
 
     @Override
@@ -74,14 +81,9 @@
      */
     private void setPreferenceSummary(Preference preference, String value) {
         // TODO (3) Don't forget to add code here to properly set the summary for an EditTextPreference
-        if (preference instanceof ListPreference) {
-            // For list preferences, figure out the label of the selected value
-            ListPreference listPreference = (ListPreference) preference;
-            int prefIndex = listPreference.findIndexOfValue(value);
-            if (prefIndex >= 0) {
-                // Set the summary to that label
-                listPreference.setSummary(listPreference.getEntries()[prefIndex]);
-            }
+
+        if (preference instanceof  EditTextPreference) {
+            preference.setSummary(value);
         }
     }
     
Index: Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/xml/pref_visualizer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/xml/pref_visualizer.xml	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/xml/pref_visualizer.xml	(date 1594300487718)
@@ -25,12 +25,17 @@
 
     <!-- TODO (1) Add and EditTextPreference with all of the appropriate strings stored in strings.xml.
         It should have a key, default value of 1 and title -->
+    <EditTextPreference
+        android:defaultValue="@string/pref_size_default"
+        android:key="@string/pref_size_key"
+        android:title="@string/pref_size_label" />
 
     <ListPreference
         android:defaultValue="@string/pref_color_red_value"
         android:entries="@array/pref_color_option_labels"
         android:entryValues="@array/pref_color_option_values"
         android:key="@string/pref_color_key"
-        android:title="@string/pref_color_label" />
+        android:title="@string/pref_color_label"
+        android:summary="%s"/>
 
 </PreferenceScreen>
Index: Lesson06-Visualizer-Preferences/T06.08-Exercise-PreferenceSummary/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson06-Visualizer-Preferences/T06.08-Exercise-PreferenceSummary/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson06-Visualizer-Preferences/T06.08-Exercise-PreferenceSummary/app/src/main/java/android/example/com/visualizerpreferences/SettingsFragment.java	(date 1594125992250)
@@ -28,7 +28,7 @@
 import android.widget.Toast;
 
 // TODO (1) Implement OnSharedPreferenceChangeListener
-public class SettingsFragment extends PreferenceFragmentCompat {
+public class SettingsFragment extends PreferenceFragmentCompat implements OnSharedPreferenceChangeListener{
 
     @Override
     public void onCreatePreferences(Bundle bundle, String s) {
@@ -39,16 +39,24 @@
         // TODO (3) Get the preference screen, get the number of preferences and iterate through
         // all of the preferences if it is not a checkbox preference, call the setSummary method
         // passing in a preference and the value of the preference
+        SharedPreferences sharedPreferences = getPreferenceScreen().getSharedPreferences();
+        PreferenceScreen prefScreen = getPreferenceScreen();
     }
 
     // TODO (4) Override onSharedPreferenceChanged and, if it is not a checkbox preference,
     // call setPreferenceSummary on the changed preference
 
+    @Override
+    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
+    }
+
     // TODO (2) Create a setPreferenceSummary which takes a Preference and String value as parameters.
     // This method should check if the preference is a ListPreference and, if so, find the label
     // associated with the value. You can do this by using the findIndexOfValue and getEntries methods
     // of Preference.
 
+
+
     // TODO (5) Register and unregister the OnSharedPreferenceChange listener (this class) in
     // onCreate and onDestroy respectively.
 
Index: Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/values/strings.xml	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/res/values/strings.xml	(date 1594124048403)
@@ -48,4 +48,10 @@
 
     <!-- Value in SharedPreferences for green color option -->
     <string name="pref_color_green_value" translatable="false">green</string>
+
+    <!-- Label for the size preference -->
+    <string name="pref_size_label">Size Multiplier</string>
+    <string name="pref_size_key" translatable="false">size</string>
+    <string name="pref_size_default" translatable="false">1</string>
+
 </resources>
Index: Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/VisualizerActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/VisualizerActivity.java	(revision ae6d41c9f780023e21a5c8bb6aa11728f22ec83d)
+++ Lesson06-Visualizer-Preferences/T06.09-Exercise-EditTextPreference/app/src/main/java/android/example/com/visualizerpreferences/VisualizerActivity.java	(date 1594133663603)
@@ -61,10 +61,17 @@
                 getResources().getBoolean(R.bool.pref_show_treble_default)));
         mVisualizerView.setMinSizeScale(1);
         loadColorFromPreferences(sharedPreferences);
+        loadSizeFromSharedPreferences(sharedPreferences);
         // Register the listener
         sharedPreferences.registerOnSharedPreferenceChangeListener(this);
     }
 
+    private void loadSizeFromSharedPreferences(SharedPreferences sharedPreferences) {
+        float minSize = Float.parseFloat(sharedPreferences.getString(getString(R.string.pref_size_key),
+                getString(R.string.pref_size_default)));
+        mVisualizerView.setMinSizeScale(minSize);
+    }
+
     private void loadColorFromPreferences(SharedPreferences sharedPreferences) {
         mVisualizerView.setColor(sharedPreferences.getString(getString(R.string.pref_color_key),
                 getString(R.string.pref_color_red_value)));
@@ -82,6 +89,8 @@
             mVisualizerView.setShowTreble(sharedPreferences.getBoolean(key, getResources().getBoolean(R.bool.pref_show_treble_default)));
         } else if (key.equals(getString(R.string.pref_color_key))) {
             loadColorFromPreferences(sharedPreferences);
+        } else if (key.equals(getString(R.string.pref_size_key))) {
+            loadSizeFromSharedPreferences(sharedPreferences);
         }
     }
 
